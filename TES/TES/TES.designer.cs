#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TES
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TES")]
	public partial class TESDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin_Information(Admin_Information instance);
    partial void UpdateAdmin_Information(Admin_Information instance);
    partial void DeleteAdmin_Information(Admin_Information instance);
    partial void InsertEvent_Date(Event_Date instance);
    partial void UpdateEvent_Date(Event_Date instance);
    partial void DeleteEvent_Date(Event_Date instance);
    partial void InsertGTC_Review(GTC_Review instance);
    partial void UpdateGTC_Review(GTC_Review instance);
    partial void DeleteGTC_Review(GTC_Review instance);
    partial void InsertMeeting(Meeting instance);
    partial void UpdateMeeting(Meeting instance);
    partial void DeleteMeeting(Meeting instance);
    partial void InsertPresentation_Schedule(Presentation_Schedule instance);
    partial void UpdatePresentation_Schedule(Presentation_Schedule instance);
    partial void DeletePresentation_Schedule(Presentation_Schedule instance);
    partial void InsertScheduler(Scheduler instance);
    partial void UpdateScheduler(Scheduler instance);
    partial void DeleteScheduler(Scheduler instance);
    partial void InsertStudent_Information(Student_Information instance);
    partial void UpdateStudent_Information(Student_Information instance);
    partial void DeleteStudent_Information(Student_Information instance);
    partial void InsertStudent_Schedule(Student_Schedule instance);
    partial void UpdateStudent_Schedule(Student_Schedule instance);
    partial void DeleteStudent_Schedule(Student_Schedule instance);
    partial void InsertStudent_Supervisor(Student_Supervisor instance);
    partial void UpdateStudent_Supervisor(Student_Supervisor instance);
    partial void DeleteStudent_Supervisor(Student_Supervisor instance);
    partial void InsertStudent_Thesis_Supervisor(Student_Thesis_Supervisor instance);
    partial void UpdateStudent_Thesis_Supervisor(Student_Thesis_Supervisor instance);
    partial void DeleteStudent_Thesis_Supervisor(Student_Thesis_Supervisor instance);
    partial void InsertSupervisor_Information(Supervisor_Information instance);
    partial void UpdateSupervisor_Information(Supervisor_Information instance);
    partial void DeleteSupervisor_Information(Supervisor_Information instance);
    partial void InsertSupervisor_Schedule(Supervisor_Schedule instance);
    partial void UpdateSupervisor_Schedule(Supervisor_Schedule instance);
    partial void DeleteSupervisor_Schedule(Supervisor_Schedule instance);
    partial void InsertThesi(Thesi instance);
    partial void UpdateThesi(Thesi instance);
    partial void DeleteThesi(Thesi instance);
    partial void InsertThesis_File(Thesis_File instance);
    partial void UpdateThesis_File(Thesis_File instance);
    partial void DeleteThesis_File(Thesis_File instance);
    partial void InsertUser_Information(User_Information instance);
    partial void UpdateUser_Information(User_Information instance);
    partial void DeleteUser_Information(User_Information instance);
    #endregion
		
		public TESDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TESConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TESDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TESDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin_Information> Admin_Informations
		{
			get
			{
				return this.GetTable<Admin_Information>();
			}
		}
		
		public System.Data.Linq.Table<Event_Date> Event_Dates
		{
			get
			{
				return this.GetTable<Event_Date>();
			}
		}
		
		public System.Data.Linq.Table<GTC_Review> GTC_Reviews
		{
			get
			{
				return this.GetTable<GTC_Review>();
			}
		}
		
		public System.Data.Linq.Table<Meeting> Meetings
		{
			get
			{
				return this.GetTable<Meeting>();
			}
		}
		
		public System.Data.Linq.Table<Presentation_Schedule> Presentation_Schedules
		{
			get
			{
				return this.GetTable<Presentation_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Scheduler> Schedulers
		{
			get
			{
				return this.GetTable<Scheduler>();
			}
		}
		
		public System.Data.Linq.Table<Student_Information> Student_Informations
		{
			get
			{
				return this.GetTable<Student_Information>();
			}
		}
		
		public System.Data.Linq.Table<Student_Schedule> Student_Schedules
		{
			get
			{
				return this.GetTable<Student_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Student_Supervisor> Student_Supervisors
		{
			get
			{
				return this.GetTable<Student_Supervisor>();
			}
		}
		
		public System.Data.Linq.Table<Student_Thesis_Supervisor> Student_Thesis_Supervisors
		{
			get
			{
				return this.GetTable<Student_Thesis_Supervisor>();
			}
		}
		
		public System.Data.Linq.Table<Supervisor_Information> Supervisor_Informations
		{
			get
			{
				return this.GetTable<Supervisor_Information>();
			}
		}
		
		public System.Data.Linq.Table<Supervisor_Schedule> Supervisor_Schedules
		{
			get
			{
				return this.GetTable<Supervisor_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Thesi> Thesis
		{
			get
			{
				return this.GetTable<Thesi>();
			}
		}
		
		public System.Data.Linq.Table<Thesis_File> Thesis_Files
		{
			get
			{
				return this.GetTable<Thesis_File>();
			}
		}
		
		public System.Data.Linq.Table<User_Information> User_Informations
		{
			get
			{
				return this.GetTable<User_Information>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_Information")]
	public partial class Admin_Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _admin_id;
		
		private System.Nullable<long> _user_id;
		
		private EntitySet<Scheduler> _Schedulers;
		
		private EntitySet<Thesi> _Thesis;
		
		private EntityRef<User_Information> _User_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_idChanging(long value);
    partial void Onadmin_idChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    #endregion
		
		public Admin_Information()
		{
			this._Schedulers = new EntitySet<Scheduler>(new Action<Scheduler>(this.attach_Schedulers), new Action<Scheduler>(this.detach_Schedulers));
			this._Thesis = new EntitySet<Thesi>(new Action<Thesi>(this.attach_Thesis), new Action<Thesi>(this.detach_Thesis));
			this._User_Information = default(EntityRef<User_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Information_Scheduler", Storage="_Schedulers", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<Scheduler> Schedulers
		{
			get
			{
				return this._Schedulers;
			}
			set
			{
				this._Schedulers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Information_Thesi", Storage="_Thesis", ThisKey="admin_id", OtherKey="admin_id")]
		public EntitySet<Thesi> Thesis
		{
			get
			{
				return this._Thesis;
			}
			set
			{
				this._Thesis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Admin_Information", Storage="_User_Information", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public User_Information User_Information
		{
			get
			{
				return this._User_Information.Entity;
			}
			set
			{
				User_Information previousValue = this._User_Information.Entity;
				if (((previousValue != value) 
							|| (this._User_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Information.Entity = null;
						previousValue.Admin_Informations.Remove(this);
					}
					this._User_Information.Entity = value;
					if ((value != null))
					{
						value.Admin_Informations.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("User_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Schedulers(Scheduler entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Information = this;
		}
		
		private void detach_Schedulers(Scheduler entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Information = null;
		}
		
		private void attach_Thesis(Thesi entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Information = this;
		}
		
		private void detach_Thesis(Thesi entity)
		{
			this.SendPropertyChanging();
			entity.Admin_Information = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_Date")]
	public partial class Event_Date : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _event_id;
		
		private string _event_date0;
		
		private string _event_date1;
		
		private string _event_date2;
		
		private string _event_date3;
		
		private string _event_date4;
		
		private string _event_date5;
		
		private string _event_date6;
		
		private string _event_date7;
		
		private string _event_date8;
		
		private string _fall_date;
		
		private string _header_date;
		
		private string _spring_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void Onevent_date0Changing(string value);
    partial void Onevent_date0Changed();
    partial void Onevent_date1Changing(string value);
    partial void Onevent_date1Changed();
    partial void Onevent_date2Changing(string value);
    partial void Onevent_date2Changed();
    partial void Onevent_date3Changing(string value);
    partial void Onevent_date3Changed();
    partial void Onevent_date4Changing(string value);
    partial void Onevent_date4Changed();
    partial void Onevent_date5Changing(string value);
    partial void Onevent_date5Changed();
    partial void Onevent_date6Changing(string value);
    partial void Onevent_date6Changed();
    partial void Onevent_date7Changing(string value);
    partial void Onevent_date7Changed();
    partial void Onevent_date8Changing(string value);
    partial void Onevent_date8Changed();
    partial void Onfall_dateChanging(string value);
    partial void Onfall_dateChanged();
    partial void Onheader_dateChanging(string value);
    partial void Onheader_dateChanged();
    partial void Onspring_dateChanging(string value);
    partial void Onspring_dateChanged();
    #endregion
		
		public Event_Date()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date0", DbType="VarChar(50)")]
		public string event_date0
		{
			get
			{
				return this._event_date0;
			}
			set
			{
				if ((this._event_date0 != value))
				{
					this.Onevent_date0Changing(value);
					this.SendPropertyChanging();
					this._event_date0 = value;
					this.SendPropertyChanged("event_date0");
					this.Onevent_date0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date1", DbType="VarChar(50)")]
		public string event_date1
		{
			get
			{
				return this._event_date1;
			}
			set
			{
				if ((this._event_date1 != value))
				{
					this.Onevent_date1Changing(value);
					this.SendPropertyChanging();
					this._event_date1 = value;
					this.SendPropertyChanged("event_date1");
					this.Onevent_date1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date2", DbType="VarChar(50)")]
		public string event_date2
		{
			get
			{
				return this._event_date2;
			}
			set
			{
				if ((this._event_date2 != value))
				{
					this.Onevent_date2Changing(value);
					this.SendPropertyChanging();
					this._event_date2 = value;
					this.SendPropertyChanged("event_date2");
					this.Onevent_date2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date3", DbType="VarChar(50)")]
		public string event_date3
		{
			get
			{
				return this._event_date3;
			}
			set
			{
				if ((this._event_date3 != value))
				{
					this.Onevent_date3Changing(value);
					this.SendPropertyChanging();
					this._event_date3 = value;
					this.SendPropertyChanged("event_date3");
					this.Onevent_date3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date4", DbType="VarChar(50)")]
		public string event_date4
		{
			get
			{
				return this._event_date4;
			}
			set
			{
				if ((this._event_date4 != value))
				{
					this.Onevent_date4Changing(value);
					this.SendPropertyChanging();
					this._event_date4 = value;
					this.SendPropertyChanged("event_date4");
					this.Onevent_date4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date5", DbType="VarChar(50)")]
		public string event_date5
		{
			get
			{
				return this._event_date5;
			}
			set
			{
				if ((this._event_date5 != value))
				{
					this.Onevent_date5Changing(value);
					this.SendPropertyChanging();
					this._event_date5 = value;
					this.SendPropertyChanged("event_date5");
					this.Onevent_date5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date6", DbType="VarChar(50)")]
		public string event_date6
		{
			get
			{
				return this._event_date6;
			}
			set
			{
				if ((this._event_date6 != value))
				{
					this.Onevent_date6Changing(value);
					this.SendPropertyChanging();
					this._event_date6 = value;
					this.SendPropertyChanged("event_date6");
					this.Onevent_date6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date7", DbType="VarChar(50)")]
		public string event_date7
		{
			get
			{
				return this._event_date7;
			}
			set
			{
				if ((this._event_date7 != value))
				{
					this.Onevent_date7Changing(value);
					this.SendPropertyChanging();
					this._event_date7 = value;
					this.SendPropertyChanged("event_date7");
					this.Onevent_date7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_date8", DbType="VarChar(50)")]
		public string event_date8
		{
			get
			{
				return this._event_date8;
			}
			set
			{
				if ((this._event_date8 != value))
				{
					this.Onevent_date8Changing(value);
					this.SendPropertyChanging();
					this._event_date8 = value;
					this.SendPropertyChanged("event_date8");
					this.Onevent_date8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fall_date", DbType="VarChar(50)")]
		public string fall_date
		{
			get
			{
				return this._fall_date;
			}
			set
			{
				if ((this._fall_date != value))
				{
					this.Onfall_dateChanging(value);
					this.SendPropertyChanging();
					this._fall_date = value;
					this.SendPropertyChanged("fall_date");
					this.Onfall_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_header_date", DbType="VarChar(50)")]
		public string header_date
		{
			get
			{
				return this._header_date;
			}
			set
			{
				if ((this._header_date != value))
				{
					this.Onheader_dateChanging(value);
					this.SendPropertyChanging();
					this._header_date = value;
					this.SendPropertyChanged("header_date");
					this.Onheader_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spring_date", DbType="VarChar(50)")]
		public string spring_date
		{
			get
			{
				return this._spring_date;
			}
			set
			{
				if ((this._spring_date != value))
				{
					this.Onspring_dateChanging(value);
					this.SendPropertyChanging();
					this._spring_date = value;
					this.SendPropertyChanged("spring_date");
					this.Onspring_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GTC_Review")]
	public partial class GTC_Review : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _thesis_id;
		
		private long _gtc_id;
		
		private string _gtc_review1;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
		private EntityRef<Thesi> _Thesi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onthesis_idChanging(long value);
    partial void Onthesis_idChanged();
    partial void Ongtc_idChanging(long value);
    partial void Ongtc_idChanged();
    partial void Ongtc_review1Changing(string value);
    partial void Ongtc_review1Changed();
    #endregion
		
		public GTC_Review()
		{
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			this._Thesi = default(EntityRef<Thesi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long thesis_id
		{
			get
			{
				return this._thesis_id;
			}
			set
			{
				if ((this._thesis_id != value))
				{
					if (this._Thesi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onthesis_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_id = value;
					this.SendPropertyChanged("thesis_id");
					this.Onthesis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gtc_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long gtc_id
		{
			get
			{
				return this._gtc_id;
			}
			set
			{
				if ((this._gtc_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongtc_idChanging(value);
					this.SendPropertyChanging();
					this._gtc_id = value;
					this.SendPropertyChanged("gtc_id");
					this.Ongtc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="gtc_review", Storage="_gtc_review1", DbType="VarChar(MAX)")]
		public string gtc_review1
		{
			get
			{
				return this._gtc_review1;
			}
			set
			{
				if ((this._gtc_review1 != value))
				{
					this.Ongtc_review1Changing(value);
					this.SendPropertyChanging();
					this._gtc_review1 = value;
					this.SendPropertyChanged("gtc_review1");
					this.Ongtc_review1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_GTC_Review", Storage="_Supervisor_Information", ThisKey="gtc_id", OtherKey="supervisor_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.GTC_Reviews.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.GTC_Reviews.Add(this);
						this._gtc_id = value.supervisor_id;
					}
					else
					{
						this._gtc_id = default(long);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thesi_GTC_Review", Storage="_Thesi", ThisKey="thesis_id", OtherKey="thesis_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Thesi Thesi
		{
			get
			{
				return this._Thesi.Entity;
			}
			set
			{
				Thesi previousValue = this._Thesi.Entity;
				if (((previousValue != value) 
							|| (this._Thesi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Thesi.Entity = null;
						previousValue.GTC_Reviews.Remove(this);
					}
					this._Thesi.Entity = value;
					if ((value != null))
					{
						value.GTC_Reviews.Add(this);
						this._thesis_id = value.thesis_id;
					}
					else
					{
						this._thesis_id = default(long);
					}
					this.SendPropertyChanged("Thesi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meeting")]
	public partial class Meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _meeting_id;
		
		private string _meeting_min;
		
		private string _meeting_time;
		
		private System.Nullable<long> _supervisor_id;
		
		private System.Nullable<long> _student_id;
		
		private EntityRef<Student_Information> _Student_Information;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeeting_idChanging(long value);
    partial void Onmeeting_idChanged();
    partial void Onmeeting_minChanging(string value);
    partial void Onmeeting_minChanged();
    partial void Onmeeting_timeChanging(string value);
    partial void Onmeeting_timeChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    #endregion
		
		public Meeting()
		{
			this._Student_Information = default(EntityRef<Student_Information>);
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long meeting_id
		{
			get
			{
				return this._meeting_id;
			}
			set
			{
				if ((this._meeting_id != value))
				{
					this.Onmeeting_idChanging(value);
					this.SendPropertyChanging();
					this._meeting_id = value;
					this.SendPropertyChanged("meeting_id");
					this.Onmeeting_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_min", DbType="VarChar(MAX)")]
		public string meeting_min
		{
			get
			{
				return this._meeting_min;
			}
			set
			{
				if ((this._meeting_min != value))
				{
					this.Onmeeting_minChanging(value);
					this.SendPropertyChanging();
					this._meeting_min = value;
					this.SendPropertyChanged("meeting_min");
					this.Onmeeting_minChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_time", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string meeting_time
		{
			get
			{
				return this._meeting_time;
			}
			set
			{
				if ((this._meeting_time != value))
				{
					this.Onmeeting_timeChanging(value);
					this.SendPropertyChanging();
					this._meeting_time = value;
					this.SendPropertyChanged("meeting_time");
					this.Onmeeting_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._Student_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Information_Meeting", Storage="_Student_Information", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public Student_Information Student_Information
		{
			get
			{
				return this._Student_Information.Entity;
			}
			set
			{
				Student_Information previousValue = this._Student_Information.Entity;
				if (((previousValue != value) 
							|| (this._Student_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student_Information.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._Student_Information.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Student_Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Meeting", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Meetings.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Meetings.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Presentation_Schedule")]
	public partial class Presentation_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _presentation_schedule_Id;
		
		private string _date_time;
		
		private System.Nullable<long> _thesis_id;
		
		private EntityRef<Thesi> _Thesi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpresentation_schedule_IdChanging(int value);
    partial void Onpresentation_schedule_IdChanged();
    partial void Ondate_timeChanging(string value);
    partial void Ondate_timeChanged();
    partial void Onthesis_idChanging(System.Nullable<long> value);
    partial void Onthesis_idChanged();
    #endregion
		
		public Presentation_Schedule()
		{
			this._Thesi = default(EntityRef<Thesi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_presentation_schedule_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int presentation_schedule_Id
		{
			get
			{
				return this._presentation_schedule_Id;
			}
			set
			{
				if ((this._presentation_schedule_Id != value))
				{
					this.Onpresentation_schedule_IdChanging(value);
					this.SendPropertyChanging();
					this._presentation_schedule_Id = value;
					this.SendPropertyChanged("presentation_schedule_Id");
					this.Onpresentation_schedule_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time", DbType="VarChar(50)")]
		public string date_time
		{
			get
			{
				return this._date_time;
			}
			set
			{
				if ((this._date_time != value))
				{
					this.Ondate_timeChanging(value);
					this.SendPropertyChanging();
					this._date_time = value;
					this.SendPropertyChanged("date_time");
					this.Ondate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_id", DbType="BigInt")]
		public System.Nullable<long> thesis_id
		{
			get
			{
				return this._thesis_id;
			}
			set
			{
				if ((this._thesis_id != value))
				{
					if (this._Thesi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onthesis_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_id = value;
					this.SendPropertyChanged("thesis_id");
					this.Onthesis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thesi_Presentation_Schedule", Storage="_Thesi", ThisKey="thesis_id", OtherKey="thesis_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Thesi Thesi
		{
			get
			{
				return this._Thesi.Entity;
			}
			set
			{
				Thesi previousValue = this._Thesi.Entity;
				if (((previousValue != value) 
							|| (this._Thesi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Thesi.Entity = null;
						previousValue.Presentation_Schedules.Remove(this);
					}
					this._Thesi.Entity = value;
					if ((value != null))
					{
						value.Presentation_Schedules.Add(this);
						this._thesis_id = value.thesis_id;
					}
					else
					{
						this._thesis_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Thesi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scheduler")]
	public partial class Scheduler : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _schedule_id;
		
		private string _schedule_date;
		
		private string _schedule_room;
		
		private string _schedule_name;
		
		private System.Nullable<long> _supervisor_id;
		
		private System.Nullable<long> _student_id;
		
		private System.Nullable<long> _admin_id;
		
		private EntitySet<Supervisor_Schedule> _Supervisor_Schedules;
		
		private EntityRef<Admin_Information> _Admin_Information;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onschedule_idChanging(long value);
    partial void Onschedule_idChanged();
    partial void Onschedule_dateChanging(string value);
    partial void Onschedule_dateChanged();
    partial void Onschedule_roomChanging(string value);
    partial void Onschedule_roomChanged();
    partial void Onschedule_nameChanging(string value);
    partial void Onschedule_nameChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    partial void Onadmin_idChanging(System.Nullable<long> value);
    partial void Onadmin_idChanged();
    #endregion
		
		public Scheduler()
		{
			this._Supervisor_Schedules = new EntitySet<Supervisor_Schedule>(new Action<Supervisor_Schedule>(this.attach_Supervisor_Schedules), new Action<Supervisor_Schedule>(this.detach_Supervisor_Schedules));
			this._Admin_Information = default(EntityRef<Admin_Information>);
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_date", DbType="VarChar(50)")]
		public string schedule_date
		{
			get
			{
				return this._schedule_date;
			}
			set
			{
				if ((this._schedule_date != value))
				{
					this.Onschedule_dateChanging(value);
					this.SendPropertyChanging();
					this._schedule_date = value;
					this.SendPropertyChanged("schedule_date");
					this.Onschedule_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_room", DbType="VarChar(50)")]
		public string schedule_room
		{
			get
			{
				return this._schedule_room;
			}
			set
			{
				if ((this._schedule_room != value))
				{
					this.Onschedule_roomChanging(value);
					this.SendPropertyChanging();
					this._schedule_room = value;
					this.SendPropertyChanged("schedule_room");
					this.Onschedule_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_name", DbType="VarChar(50)")]
		public string schedule_name
		{
			get
			{
				return this._schedule_name;
			}
			set
			{
				if ((this._schedule_name != value))
				{
					this.Onschedule_nameChanging(value);
					this.SendPropertyChanging();
					this._schedule_name = value;
					this.SendPropertyChanged("schedule_name");
					this.Onschedule_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="BigInt")]
		public System.Nullable<long> admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._Admin_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheduler_Supervisor_Schedule", Storage="_Supervisor_Schedules", ThisKey="schedule_id", OtherKey="schedule_id")]
		public EntitySet<Supervisor_Schedule> Supervisor_Schedules
		{
			get
			{
				return this._Supervisor_Schedules;
			}
			set
			{
				this._Supervisor_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Information_Scheduler", Storage="_Admin_Information", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public Admin_Information Admin_Information
		{
			get
			{
				return this._Admin_Information.Entity;
			}
			set
			{
				Admin_Information previousValue = this._Admin_Information.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Information.Entity = null;
						previousValue.Schedulers.Remove(this);
					}
					this._Admin_Information.Entity = value;
					if ((value != null))
					{
						value.Schedulers.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Admin_Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Scheduler", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Schedulers.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Schedulers.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Supervisor_Schedules(Supervisor_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Scheduler = this;
		}
		
		private void detach_Supervisor_Schedules(Supervisor_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Scheduler = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Information")]
	public partial class Student_Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _student_id;
		
		private string _student_reg_no;
		
		private string _student_smester;
		
		private System.Nullable<long> _user_id;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntityRef<User_Information> _User_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_idChanging(long value);
    partial void Onstudent_idChanged();
    partial void Onstudent_reg_noChanging(string value);
    partial void Onstudent_reg_noChanged();
    partial void Onstudent_smesterChanging(string value);
    partial void Onstudent_smesterChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    #endregion
		
		public Student_Information()
		{
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._User_Information = default(EntityRef<User_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_reg_no", DbType="VarChar(50)")]
		public string student_reg_no
		{
			get
			{
				return this._student_reg_no;
			}
			set
			{
				if ((this._student_reg_no != value))
				{
					this.Onstudent_reg_noChanging(value);
					this.SendPropertyChanging();
					this._student_reg_no = value;
					this.SendPropertyChanged("student_reg_no");
					this.Onstudent_reg_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_smester", DbType="VarChar(50)")]
		public string student_smester
		{
			get
			{
				return this._student_smester;
			}
			set
			{
				if ((this._student_smester != value))
				{
					this.Onstudent_smesterChanging(value);
					this.SendPropertyChanging();
					this._student_smester = value;
					this.SendPropertyChanged("student_smester");
					this.Onstudent_smesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Information_Meeting", Storage="_Meetings", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Student_Information", Storage="_User_Information", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public User_Information User_Information
		{
			get
			{
				return this._User_Information.Entity;
			}
			set
			{
				User_Information previousValue = this._User_Information.Entity;
				if (((previousValue != value) 
							|| (this._User_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Information.Entity = null;
						previousValue.Student_Informations.Remove(this);
					}
					this._User_Information.Entity = value;
					if ((value != null))
					{
						value.Student_Informations.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("User_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Student_Information = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Student_Information = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Schedule")]
	public partial class Student_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _student_schedule_id;
		
		private System.Nullable<long> _supervisor_id;
		
		private System.Nullable<long> _student_id;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_schedule_idChanging(string value);
    partial void Onstudent_schedule_idChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    #endregion
		
		public Student_Schedule()
		{
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_schedule_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_schedule_id
		{
			get
			{
				return this._student_schedule_id;
			}
			set
			{
				if ((this._student_schedule_id != value))
				{
					this.Onstudent_schedule_idChanging(value);
					this.SendPropertyChanging();
					this._student_schedule_id = value;
					this.SendPropertyChanged("student_schedule_id");
					this.Onstudent_schedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Schedule", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Student_Schedules.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Student_Schedules.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Supervisor")]
	public partial class Student_Supervisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _student_supervisor_id;
		
		private System.Nullable<long> _supervisor_id;
		
		private System.Nullable<long> _student_id;
		
		private System.Nullable<bool> _supervise;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_supervisor_idChanging(long value);
    partial void Onstudent_supervisor_idChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    partial void OnsuperviseChanging(System.Nullable<bool> value);
    partial void OnsuperviseChanged();
    #endregion
		
		public Student_Supervisor()
		{
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_supervisor_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long student_supervisor_id
		{
			get
			{
				return this._student_supervisor_id;
			}
			set
			{
				if ((this._student_supervisor_id != value))
				{
					this.Onstudent_supervisor_idChanging(value);
					this.SendPropertyChanging();
					this._student_supervisor_id = value;
					this.SendPropertyChanged("student_supervisor_id");
					this.Onstudent_supervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervise", DbType="Bit")]
		public System.Nullable<bool> supervise
		{
			get
			{
				return this._supervise;
			}
			set
			{
				if ((this._supervise != value))
				{
					this.OnsuperviseChanging(value);
					this.SendPropertyChanging();
					this._supervise = value;
					this.SendPropertyChanged("supervise");
					this.OnsuperviseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Supervisor", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Student_Supervisors.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Student_Supervisors.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student_Thesis_Supervisor")]
	public partial class Student_Thesis_Supervisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _thesis_supervisor_id;
		
		private System.Nullable<long> _thesis_id;
		
		private System.Nullable<long> _student_id;
		
		private System.Nullable<long> _supervisor_id;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onthesis_supervisor_idChanging(long value);
    partial void Onthesis_supervisor_idChanged();
    partial void Onthesis_idChanging(System.Nullable<long> value);
    partial void Onthesis_idChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    #endregion
		
		public Student_Thesis_Supervisor()
		{
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_supervisor_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long thesis_supervisor_id
		{
			get
			{
				return this._thesis_supervisor_id;
			}
			set
			{
				if ((this._thesis_supervisor_id != value))
				{
					this.Onthesis_supervisor_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_supervisor_id = value;
					this.SendPropertyChanged("thesis_supervisor_id");
					this.Onthesis_supervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_id", DbType="BigInt")]
		public System.Nullable<long> thesis_id
		{
			get
			{
				return this._thesis_id;
			}
			set
			{
				if ((this._thesis_id != value))
				{
					this.Onthesis_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_id = value;
					this.SendPropertyChanged("thesis_id");
					this.Onthesis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Thesis_Supervisor", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Student_Thesis_Supervisors.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Student_Thesis_Supervisors.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supervisor_Information")]
	public partial class Supervisor_Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _supervisor_id;
		
		private string _supervisor_gtc_member;
		
		private string _supervisor_job_title;
		
		private System.Nullable<long> _user_id;
		
		private EntitySet<GTC_Review> _GTC_Reviews;
		
		private EntitySet<Meeting> _Meetings;
		
		private EntitySet<Scheduler> _Schedulers;
		
		private EntitySet<Student_Schedule> _Student_Schedules;
		
		private EntitySet<Student_Supervisor> _Student_Supervisors;
		
		private EntitySet<Student_Thesis_Supervisor> _Student_Thesis_Supervisors;
		
		private EntitySet<Supervisor_Schedule> _Supervisor_Schedules;
		
		private EntitySet<Thesi> _Thesis;
		
		private EntityRef<User_Information> _User_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupervisor_idChanging(long value);
    partial void Onsupervisor_idChanged();
    partial void Onsupervisor_gtc_memberChanging(string value);
    partial void Onsupervisor_gtc_memberChanged();
    partial void Onsupervisor_job_titleChanging(string value);
    partial void Onsupervisor_job_titleChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    #endregion
		
		public Supervisor_Information()
		{
			this._GTC_Reviews = new EntitySet<GTC_Review>(new Action<GTC_Review>(this.attach_GTC_Reviews), new Action<GTC_Review>(this.detach_GTC_Reviews));
			this._Meetings = new EntitySet<Meeting>(new Action<Meeting>(this.attach_Meetings), new Action<Meeting>(this.detach_Meetings));
			this._Schedulers = new EntitySet<Scheduler>(new Action<Scheduler>(this.attach_Schedulers), new Action<Scheduler>(this.detach_Schedulers));
			this._Student_Schedules = new EntitySet<Student_Schedule>(new Action<Student_Schedule>(this.attach_Student_Schedules), new Action<Student_Schedule>(this.detach_Student_Schedules));
			this._Student_Supervisors = new EntitySet<Student_Supervisor>(new Action<Student_Supervisor>(this.attach_Student_Supervisors), new Action<Student_Supervisor>(this.detach_Student_Supervisors));
			this._Student_Thesis_Supervisors = new EntitySet<Student_Thesis_Supervisor>(new Action<Student_Thesis_Supervisor>(this.attach_Student_Thesis_Supervisors), new Action<Student_Thesis_Supervisor>(this.detach_Student_Thesis_Supervisors));
			this._Supervisor_Schedules = new EntitySet<Supervisor_Schedule>(new Action<Supervisor_Schedule>(this.attach_Supervisor_Schedules), new Action<Supervisor_Schedule>(this.detach_Supervisor_Schedules));
			this._Thesis = new EntitySet<Thesi>(new Action<Thesi>(this.attach_Thesis), new Action<Thesi>(this.detach_Thesis));
			this._User_Information = default(EntityRef<User_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_gtc_member", DbType="VarChar(50)")]
		public string supervisor_gtc_member
		{
			get
			{
				return this._supervisor_gtc_member;
			}
			set
			{
				if ((this._supervisor_gtc_member != value))
				{
					this.Onsupervisor_gtc_memberChanging(value);
					this.SendPropertyChanging();
					this._supervisor_gtc_member = value;
					this.SendPropertyChanged("supervisor_gtc_member");
					this.Onsupervisor_gtc_memberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_job_title", DbType="VarChar(50)")]
		public string supervisor_job_title
		{
			get
			{
				return this._supervisor_job_title;
			}
			set
			{
				if ((this._supervisor_job_title != value))
				{
					this.Onsupervisor_job_titleChanging(value);
					this.SendPropertyChanging();
					this._supervisor_job_title = value;
					this.SendPropertyChanged("supervisor_job_title");
					this.Onsupervisor_job_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_GTC_Review", Storage="_GTC_Reviews", ThisKey="supervisor_id", OtherKey="gtc_id")]
		public EntitySet<GTC_Review> GTC_Reviews
		{
			get
			{
				return this._GTC_Reviews;
			}
			set
			{
				this._GTC_Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Meeting", Storage="_Meetings", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Meeting> Meetings
		{
			get
			{
				return this._Meetings;
			}
			set
			{
				this._Meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Scheduler", Storage="_Schedulers", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Scheduler> Schedulers
		{
			get
			{
				return this._Schedulers;
			}
			set
			{
				this._Schedulers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Schedule", Storage="_Student_Schedules", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Student_Schedule> Student_Schedules
		{
			get
			{
				return this._Student_Schedules;
			}
			set
			{
				this._Student_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Supervisor", Storage="_Student_Supervisors", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Student_Supervisor> Student_Supervisors
		{
			get
			{
				return this._Student_Supervisors;
			}
			set
			{
				this._Student_Supervisors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Student_Thesis_Supervisor", Storage="_Student_Thesis_Supervisors", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Student_Thesis_Supervisor> Student_Thesis_Supervisors
		{
			get
			{
				return this._Student_Thesis_Supervisors;
			}
			set
			{
				this._Student_Thesis_Supervisors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Supervisor_Schedule", Storage="_Supervisor_Schedules", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Supervisor_Schedule> Supervisor_Schedules
		{
			get
			{
				return this._Supervisor_Schedules;
			}
			set
			{
				this._Supervisor_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Thesi", Storage="_Thesis", ThisKey="supervisor_id", OtherKey="supervisor_id")]
		public EntitySet<Thesi> Thesis
		{
			get
			{
				return this._Thesis;
			}
			set
			{
				this._Thesis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Supervisor_Information", Storage="_User_Information", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public User_Information User_Information
		{
			get
			{
				return this._User_Information.Entity;
			}
			set
			{
				User_Information previousValue = this._User_Information.Entity;
				if (((previousValue != value) 
							|| (this._User_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User_Information.Entity = null;
						previousValue.Supervisor_Informations.Remove(this);
					}
					this._User_Information.Entity = value;
					if ((value != null))
					{
						value.Supervisor_Informations.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("User_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GTC_Reviews(GTC_Review entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_GTC_Reviews(GTC_Review entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Meetings(Meeting entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Schedulers(Scheduler entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Schedulers(Scheduler entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Student_Schedules(Student_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Student_Schedules(Student_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Student_Supervisors(Student_Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Student_Supervisors(Student_Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Student_Thesis_Supervisors(Student_Thesis_Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Student_Thesis_Supervisors(Student_Thesis_Supervisor entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Supervisor_Schedules(Supervisor_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Supervisor_Schedules(Supervisor_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
		
		private void attach_Thesis(Thesi entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = this;
		}
		
		private void detach_Thesis(Thesi entity)
		{
			this.SendPropertyChanging();
			entity.Supervisor_Information = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supervisor_Schedule")]
	public partial class Supervisor_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _supervisor_schedule_id;
		
		private System.Nullable<long> _schedule_id;
		
		private System.Nullable<long> _supervisor_id;
		
		private EntityRef<Scheduler> _Scheduler;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsupervisor_schedule_idChanging(long value);
    partial void Onsupervisor_schedule_idChanged();
    partial void Onschedule_idChanging(System.Nullable<long> value);
    partial void Onschedule_idChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    #endregion
		
		public Supervisor_Schedule()
		{
			this._Scheduler = default(EntityRef<Scheduler>);
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_schedule_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long supervisor_schedule_id
		{
			get
			{
				return this._supervisor_schedule_id;
			}
			set
			{
				if ((this._supervisor_schedule_id != value))
				{
					this.Onsupervisor_schedule_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_schedule_id = value;
					this.SendPropertyChanged("supervisor_schedule_id");
					this.Onsupervisor_schedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule_id", DbType="BigInt")]
		public System.Nullable<long> schedule_id
		{
			get
			{
				return this._schedule_id;
			}
			set
			{
				if ((this._schedule_id != value))
				{
					if (this._Scheduler.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onschedule_idChanging(value);
					this.SendPropertyChanging();
					this._schedule_id = value;
					this.SendPropertyChanged("schedule_id");
					this.Onschedule_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Scheduler_Supervisor_Schedule", Storage="_Scheduler", ThisKey="schedule_id", OtherKey="schedule_id", IsForeignKey=true)]
		public Scheduler Scheduler
		{
			get
			{
				return this._Scheduler.Entity;
			}
			set
			{
				Scheduler previousValue = this._Scheduler.Entity;
				if (((previousValue != value) 
							|| (this._Scheduler.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Scheduler.Entity = null;
						previousValue.Supervisor_Schedules.Remove(this);
					}
					this._Scheduler.Entity = value;
					if ((value != null))
					{
						value.Supervisor_Schedules.Add(this);
						this._schedule_id = value.schedule_id;
					}
					else
					{
						this._schedule_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Scheduler");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Supervisor_Schedule", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true)]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Supervisor_Schedules.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Supervisor_Schedules.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thesis")]
	public partial class Thesi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _thesis_id;
		
		private string _thesis_title;
		
		private string _thesis_domain;
		
		private string _thesis_discription;
		
		private string _thesis_status;
		
		private System.Nullable<long> _student_id;
		
		private System.Nullable<long> _supervisor_id;
		
		private System.Nullable<long> _cosupervisor_id;
		
		private System.Nullable<long> _admin_id;
		
		private EntitySet<GTC_Review> _GTC_Reviews;
		
		private EntitySet<Presentation_Schedule> _Presentation_Schedules;
		
		private EntityRef<Admin_Information> _Admin_Information;
		
		private EntityRef<Supervisor_Information> _Supervisor_Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onthesis_idChanging(long value);
    partial void Onthesis_idChanged();
    partial void Onthesis_titleChanging(string value);
    partial void Onthesis_titleChanged();
    partial void Onthesis_domainChanging(string value);
    partial void Onthesis_domainChanged();
    partial void Onthesis_discriptionChanging(string value);
    partial void Onthesis_discriptionChanged();
    partial void Onthesis_statusChanging(string value);
    partial void Onthesis_statusChanged();
    partial void Onstudent_idChanging(System.Nullable<long> value);
    partial void Onstudent_idChanged();
    partial void Onsupervisor_idChanging(System.Nullable<long> value);
    partial void Onsupervisor_idChanged();
    partial void Oncosupervisor_idChanging(System.Nullable<long> value);
    partial void Oncosupervisor_idChanged();
    partial void Onadmin_idChanging(System.Nullable<long> value);
    partial void Onadmin_idChanged();
    #endregion
		
		public Thesi()
		{
			this._GTC_Reviews = new EntitySet<GTC_Review>(new Action<GTC_Review>(this.attach_GTC_Reviews), new Action<GTC_Review>(this.detach_GTC_Reviews));
			this._Presentation_Schedules = new EntitySet<Presentation_Schedule>(new Action<Presentation_Schedule>(this.attach_Presentation_Schedules), new Action<Presentation_Schedule>(this.detach_Presentation_Schedules));
			this._Admin_Information = default(EntityRef<Admin_Information>);
			this._Supervisor_Information = default(EntityRef<Supervisor_Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long thesis_id
		{
			get
			{
				return this._thesis_id;
			}
			set
			{
				if ((this._thesis_id != value))
				{
					this.Onthesis_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_id = value;
					this.SendPropertyChanged("thesis_id");
					this.Onthesis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_title", DbType="VarChar(50)")]
		public string thesis_title
		{
			get
			{
				return this._thesis_title;
			}
			set
			{
				if ((this._thesis_title != value))
				{
					this.Onthesis_titleChanging(value);
					this.SendPropertyChanging();
					this._thesis_title = value;
					this.SendPropertyChanged("thesis_title");
					this.Onthesis_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_domain", DbType="VarChar(50)")]
		public string thesis_domain
		{
			get
			{
				return this._thesis_domain;
			}
			set
			{
				if ((this._thesis_domain != value))
				{
					this.Onthesis_domainChanging(value);
					this.SendPropertyChanging();
					this._thesis_domain = value;
					this.SendPropertyChanged("thesis_domain");
					this.Onthesis_domainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_discription", DbType="VarChar(50)")]
		public string thesis_discription
		{
			get
			{
				return this._thesis_discription;
			}
			set
			{
				if ((this._thesis_discription != value))
				{
					this.Onthesis_discriptionChanging(value);
					this.SendPropertyChanging();
					this._thesis_discription = value;
					this.SendPropertyChanged("thesis_discription");
					this.Onthesis_discriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_status", DbType="VarChar(50)")]
		public string thesis_status
		{
			get
			{
				return this._thesis_status;
			}
			set
			{
				if ((this._thesis_status != value))
				{
					this.Onthesis_statusChanging(value);
					this.SendPropertyChanging();
					this._thesis_status = value;
					this.SendPropertyChanged("thesis_status");
					this.Onthesis_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="BigInt")]
		public System.Nullable<long> student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supervisor_id", DbType="BigInt")]
		public System.Nullable<long> supervisor_id
		{
			get
			{
				return this._supervisor_id;
			}
			set
			{
				if ((this._supervisor_id != value))
				{
					if (this._Supervisor_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._supervisor_id = value;
					this.SendPropertyChanged("supervisor_id");
					this.Onsupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cosupervisor_id", DbType="BigInt")]
		public System.Nullable<long> cosupervisor_id
		{
			get
			{
				return this._cosupervisor_id;
			}
			set
			{
				if ((this._cosupervisor_id != value))
				{
					this.Oncosupervisor_idChanging(value);
					this.SendPropertyChanging();
					this._cosupervisor_id = value;
					this.SendPropertyChanged("cosupervisor_id");
					this.Oncosupervisor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_id", DbType="BigInt")]
		public System.Nullable<long> admin_id
		{
			get
			{
				return this._admin_id;
			}
			set
			{
				if ((this._admin_id != value))
				{
					if (this._Admin_Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onadmin_idChanging(value);
					this.SendPropertyChanging();
					this._admin_id = value;
					this.SendPropertyChanged("admin_id");
					this.Onadmin_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thesi_GTC_Review", Storage="_GTC_Reviews", ThisKey="thesis_id", OtherKey="thesis_id")]
		public EntitySet<GTC_Review> GTC_Reviews
		{
			get
			{
				return this._GTC_Reviews;
			}
			set
			{
				this._GTC_Reviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thesi_Presentation_Schedule", Storage="_Presentation_Schedules", ThisKey="thesis_id", OtherKey="thesis_id")]
		public EntitySet<Presentation_Schedule> Presentation_Schedules
		{
			get
			{
				return this._Presentation_Schedules;
			}
			set
			{
				this._Presentation_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Information_Thesi", Storage="_Admin_Information", ThisKey="admin_id", OtherKey="admin_id", IsForeignKey=true)]
		public Admin_Information Admin_Information
		{
			get
			{
				return this._Admin_Information.Entity;
			}
			set
			{
				Admin_Information previousValue = this._Admin_Information.Entity;
				if (((previousValue != value) 
							|| (this._Admin_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_Information.Entity = null;
						previousValue.Thesis.Remove(this);
					}
					this._Admin_Information.Entity = value;
					if ((value != null))
					{
						value.Thesis.Add(this);
						this._admin_id = value.admin_id;
					}
					else
					{
						this._admin_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Admin_Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supervisor_Information_Thesi", Storage="_Supervisor_Information", ThisKey="supervisor_id", OtherKey="supervisor_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public Supervisor_Information Supervisor_Information
		{
			get
			{
				return this._Supervisor_Information.Entity;
			}
			set
			{
				Supervisor_Information previousValue = this._Supervisor_Information.Entity;
				if (((previousValue != value) 
							|| (this._Supervisor_Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supervisor_Information.Entity = null;
						previousValue.Thesis.Remove(this);
					}
					this._Supervisor_Information.Entity = value;
					if ((value != null))
					{
						value.Thesis.Add(this);
						this._supervisor_id = value.supervisor_id;
					}
					else
					{
						this._supervisor_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Supervisor_Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GTC_Reviews(GTC_Review entity)
		{
			this.SendPropertyChanging();
			entity.Thesi = this;
		}
		
		private void detach_GTC_Reviews(GTC_Review entity)
		{
			this.SendPropertyChanging();
			entity.Thesi = null;
		}
		
		private void attach_Presentation_Schedules(Presentation_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Thesi = this;
		}
		
		private void detach_Presentation_Schedules(Presentation_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Thesi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thesis_Files")]
	public partial class Thesis_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _file_Id;
		
		private long _thesis_id;
		
		private string _file_path;
		
		private string _file_name;
		
		private string _review;
		
		private string _gtc_review;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfile_IdChanging(long value);
    partial void Onfile_IdChanged();
    partial void Onthesis_idChanging(long value);
    partial void Onthesis_idChanged();
    partial void Onfile_pathChanging(string value);
    partial void Onfile_pathChanged();
    partial void Onfile_nameChanging(string value);
    partial void Onfile_nameChanged();
    partial void OnreviewChanging(string value);
    partial void OnreviewChanged();
    partial void Ongtc_reviewChanging(string value);
    partial void Ongtc_reviewChanged();
    #endregion
		
		public Thesis_File()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long file_Id
		{
			get
			{
				return this._file_Id;
			}
			set
			{
				if ((this._file_Id != value))
				{
					this.Onfile_IdChanging(value);
					this.SendPropertyChanging();
					this._file_Id = value;
					this.SendPropertyChanged("file_Id");
					this.Onfile_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_id", DbType="BigInt NOT NULL")]
		public long thesis_id
		{
			get
			{
				return this._thesis_id;
			}
			set
			{
				if ((this._thesis_id != value))
				{
					this.Onthesis_idChanging(value);
					this.SendPropertyChanging();
					this._thesis_id = value;
					this.SendPropertyChanged("thesis_id");
					this.Onthesis_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_path", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string file_path
		{
			get
			{
				return this._file_path;
			}
			set
			{
				if ((this._file_path != value))
				{
					this.Onfile_pathChanging(value);
					this.SendPropertyChanging();
					this._file_path = value;
					this.SendPropertyChanged("file_path");
					this.Onfile_pathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string file_name
		{
			get
			{
				return this._file_name;
			}
			set
			{
				if ((this._file_name != value))
				{
					this.Onfile_nameChanging(value);
					this.SendPropertyChanging();
					this._file_name = value;
					this.SendPropertyChanged("file_name");
					this.Onfile_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_review", DbType="NVarChar(MAX)")]
		public string review
		{
			get
			{
				return this._review;
			}
			set
			{
				if ((this._review != value))
				{
					this.OnreviewChanging(value);
					this.SendPropertyChanging();
					this._review = value;
					this.SendPropertyChanged("review");
					this.OnreviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gtc_review", DbType="NVarChar(MAX)")]
		public string gtc_review
		{
			get
			{
				return this._gtc_review;
			}
			set
			{
				if ((this._gtc_review != value))
				{
					this.Ongtc_reviewChanging(value);
					this.SendPropertyChanging();
					this._gtc_review = value;
					this.SendPropertyChanged("gtc_review");
					this.Ongtc_reviewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User_Information")]
	public partial class User_Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _user_id;
		
		private string _full_name;
		
		private string _user_name;
		
		private string _user_email;
		
		private string _user_password;
		
		private string _user_contact_no;
		
		private string _user_gender;
		
		private string _user_cnic_no;
		
		private string _password_recovery;
		
		private EntitySet<Admin_Information> _Admin_Informations;
		
		private EntitySet<Student_Information> _Student_Informations;
		
		private EntitySet<Supervisor_Information> _Supervisor_Informations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(long value);
    partial void Onuser_idChanged();
    partial void Onfull_nameChanging(string value);
    partial void Onfull_nameChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onuser_emailChanging(string value);
    partial void Onuser_emailChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onuser_contact_noChanging(string value);
    partial void Onuser_contact_noChanged();
    partial void Onuser_genderChanging(string value);
    partial void Onuser_genderChanged();
    partial void Onuser_cnic_noChanging(string value);
    partial void Onuser_cnic_noChanged();
    partial void Onpassword_recoveryChanging(string value);
    partial void Onpassword_recoveryChanged();
    #endregion
		
		public User_Information()
		{
			this._Admin_Informations = new EntitySet<Admin_Information>(new Action<Admin_Information>(this.attach_Admin_Informations), new Action<Admin_Information>(this.detach_Admin_Informations));
			this._Student_Informations = new EntitySet<Student_Information>(new Action<Student_Information>(this.attach_Student_Informations), new Action<Student_Information>(this.detach_Student_Informations));
			this._Supervisor_Informations = new EntitySet<Supervisor_Information>(new Action<Supervisor_Information>(this.attach_Supervisor_Informations), new Action<Supervisor_Information>(this.detach_Supervisor_Informations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_name", DbType="VarChar(50)")]
		public string full_name
		{
			get
			{
				return this._full_name;
			}
			set
			{
				if ((this._full_name != value))
				{
					this.Onfull_nameChanging(value);
					this.SendPropertyChanging();
					this._full_name = value;
					this.SendPropertyChanged("full_name");
					this.Onfull_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_email", DbType="VarChar(50)")]
		public string user_email
		{
			get
			{
				return this._user_email;
			}
			set
			{
				if ((this._user_email != value))
				{
					this.Onuser_emailChanging(value);
					this.SendPropertyChanging();
					this._user_email = value;
					this.SendPropertyChanged("user_email");
					this.Onuser_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(50)")]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_contact_no", DbType="VarChar(18)")]
		public string user_contact_no
		{
			get
			{
				return this._user_contact_no;
			}
			set
			{
				if ((this._user_contact_no != value))
				{
					this.Onuser_contact_noChanging(value);
					this.SendPropertyChanging();
					this._user_contact_no = value;
					this.SendPropertyChanged("user_contact_no");
					this.Onuser_contact_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_gender", DbType="VarChar(50)")]
		public string user_gender
		{
			get
			{
				return this._user_gender;
			}
			set
			{
				if ((this._user_gender != value))
				{
					this.Onuser_genderChanging(value);
					this.SendPropertyChanging();
					this._user_gender = value;
					this.SendPropertyChanged("user_gender");
					this.Onuser_genderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_cnic_no", DbType="VarChar(50)")]
		public string user_cnic_no
		{
			get
			{
				return this._user_cnic_no;
			}
			set
			{
				if ((this._user_cnic_no != value))
				{
					this.Onuser_cnic_noChanging(value);
					this.SendPropertyChanging();
					this._user_cnic_no = value;
					this.SendPropertyChanged("user_cnic_no");
					this.Onuser_cnic_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_recovery", DbType="NChar(10)")]
		public string password_recovery
		{
			get
			{
				return this._password_recovery;
			}
			set
			{
				if ((this._password_recovery != value))
				{
					this.Onpassword_recoveryChanging(value);
					this.SendPropertyChanging();
					this._password_recovery = value;
					this.SendPropertyChanged("password_recovery");
					this.Onpassword_recoveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Admin_Information", Storage="_Admin_Informations", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Admin_Information> Admin_Informations
		{
			get
			{
				return this._Admin_Informations;
			}
			set
			{
				this._Admin_Informations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Student_Information", Storage="_Student_Informations", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Student_Information> Student_Informations
		{
			get
			{
				return this._Student_Informations;
			}
			set
			{
				this._Student_Informations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Information_Supervisor_Information", Storage="_Supervisor_Informations", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Supervisor_Information> Supervisor_Informations
		{
			get
			{
				return this._Supervisor_Informations;
			}
			set
			{
				this._Supervisor_Informations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Admin_Informations(Admin_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = this;
		}
		
		private void detach_Admin_Informations(Admin_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = null;
		}
		
		private void attach_Student_Informations(Student_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = this;
		}
		
		private void detach_Student_Informations(Student_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = null;
		}
		
		private void attach_Supervisor_Informations(Supervisor_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = this;
		}
		
		private void detach_Supervisor_Informations(Supervisor_Information entity)
		{
			this.SendPropertyChanging();
			entity.User_Information = null;
		}
	}
}
#pragma warning restore 1591
